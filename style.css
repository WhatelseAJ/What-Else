const apiKey = "52a00342238189a79c137a328380b9d0";

function shuffle() {
  const boxes = document.querySelectorAll('.search-box');
  const sampleNames = ["Tom Hanks", "Viola Davis", "Brad Pitt", "Greta Gerwig", "Christopher Nolan"];
  boxes.forEach((box, i) => {
    box.value = sampleNames[Math.floor(Math.random() * sampleNames.length)];
  });
  clearResults();
}

function clearResults() {
  const box = document.getElementById("resultsBox");
  box.innerHTML = `<p class="placeholder-text">Results will appear here.</p>`;
}

function search() {
  const names = Array.from(document.querySelectorAll('.search-box'))
    .map(input => input.value.trim())
    .filter(name => name);

  if (names.length < 2) {
    alert("Please enter at least two names to compare.");
    return;
  }

  document.getElementById("resultsBox").innerHTML = `<p>Searching for shared projects between ${names.join(" & ")}...</p>`;

  // Placeholder: in a real setup, you'd fetch TMDb data and compare credits here
  setTimeout(() => {
    renderMockResults(names);
  }, 1200);
}

function renderMockResults(names) {
  const box = document.getElementById("resultsBox");
  box.innerHTML = "";

  const fakeResults = [
    {
      title: "Imaginary Crossover Film",
      year: "2021",
      rating: "7.9",
      poster: "https://via.placeholder.com/150x225?text=Movie+Poster",
      roles: names.map(name => `${name} as Cool Character`)
    },
    {
      title: "Another Collab",
      year: "2018",
      rating: "8.2",
      poster: "https://via.placeholder.com/150x225?text=Movie+Poster",
      roles: names.map(name => `${name} as Legendary Role`)
    }
  ];

  fakeResults.forEach(result => {
    const card = document.createElement("div");
    card.className = "result-card";
    card.innerHTML = `
      <img src="${result.poster}" alt="${result.title}" class="poster" />
      <h3 class="card-title">${result.title} <span class="year">(${result.year})</span></h3>
      <p class="rating">‚≠ê ${result.rating} / 10</p>
      <ul class="role-list">${result.roles.map(role => `<li>${role}</li>`).join("")}</ul>
    `;
    box.appendChild(card);
  });
}

/* STYLE */
const style = document.createElement('style');
style.textContent = `
  body {
    font-family: 'Roboto', sans-serif;
    background-color: #f5f5f5;
    margin: 0;
    padding: 0;
    text-align: center;
  }

  .container {
    max-width: 800px;
    margin: 0 auto;
    padding: 40px 20px;
  }

  .main-title {
    font-size: 3rem;
    text-shadow: 2px 2px 0 #000, 4px 4px 0 #555;
    margin-bottom: 10px;
  }

  .subtitle {
    font-size: 1.2rem;
    margin-bottom: 30px;
    color: #555;
  }

  .search-section {
    margin-bottom: 20px;
  }

  .input-group {
    margin: 10px 0;
  }

  .search-box {
    padding: 10px;
    font-size: 1rem;
    width: 80%;
    max-width: 400px;
    border: 1px solid #ccc;
    border-radius: 5px;
  }

  .btn {
    padding: 10px 20px;
    font-size: 1rem;
    margin: 5px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }

  .btn.search { background-color: #007BFF; color: white; }
  .btn.clear { background-color: #6c757d; color: white; }
  .btn.shuffle { background-color: #28a745; color: white; }
  .btn.add { background-color: #ffc107; color: black; }

  .btn:hover {
    opacity: 0.9;
  }

  .results-box {
    margin-top: 30px;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 20px;
    justify-items: center;
  }

  .result-card {
    background-color: white;
    border-radius: 10px;
    padding: 15px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    width: 200px;
  }

  .poster {
    width: 100%;
    border-radius: 5px;
  }

  .card-title {
    font-size: 1.1rem;
    margin: 10px 0 5px;
  }

  .year {
    color: #777;
    font-size: 0.9rem;
  }

  .rating {
    font-weight: bold;
    color: #ff9900;
  }

  .role-list {
    padding: 0;
    list-style: none;
    text-align: left;
    font-size: 0.9rem;
  }
`;
document.head.appendChild(style);
